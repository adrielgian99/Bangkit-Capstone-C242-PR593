{
  "openapi": "3.0.0",
  "info": {
    "title": "ObesiCheck API",
    "description": "API Documentation for ObesiCheck.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/",
      "description": "Server Development"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints for authentication and session management"
    },
    {
      "name": "User Management",
      "description": "Endpoints for managing user data"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login a user",
        "description": "Authenticate a user and return a token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User Management"],
        "summary": "Retrieve all users",
        "description": "Returns a list of all users.",
        "responses": {
          "200": {
            "description": "A JSON array of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer", "example": 1 },
                      "name": { "type": "string", "example": "John Doe" },
                      "email": { "type": "string", "example": "john@example.com" },
                      "bmi": { "type": "number", "example": 25.4 }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User Management"],
        "summary": "Create a new user",
        "description": "Add a new user to the database.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Jane Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "jane@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "bmi": {
                    "type": "number",
                    "example": 27.3
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "example": 2 },
                    "name": { "type": "string", "example": "Jane Doe" },
                    "email": { "type": "string", "example": "jane@example.com" },
                    "bmi": { "type": "number", "example": 27.3 }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "Retrieve a user by ID",
        "description": "Fetch a single user based on their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "John Doe" },
                    "email": { "type": "string", "example": "john@example.com" },
                    "bmi": { "type": "number", "example": 25.4 }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  }
}
